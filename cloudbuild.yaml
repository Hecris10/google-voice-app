steps:
  - name: node:20
    entrypoint: bash
    env:
      - SKIP_ENV_VALIDATION=1
      - DATABASE_URL=${_DATABASE_URL}
      - BETTER_AUTH_SECRET=${_BETTER_AUTH_SECRET}
      - BASE_URL=${_BASE_URL}
      - GOOGLE_CLIENT_ID=${_GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${_GOOGLE_CLIENT_SECRET}
      - FIREBASE_KEY=${_FIREBASE_KEY}
      - FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}
      - FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${_FIREBASE_APP_ID}
      - FIREBASE_MEASUREMENT_ID=${_FIREBASE_MEASUREMENT_ID}
    args:
      - -c
      - |
        npm install
        npm install -g prisma
        npx prisma generate
        npm run build
  - name: gcr.io/k8s-skaffold/pack
    args:
      - build
      - >-
        $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - '--builder=gcr.io/buildpacks/builder:v1'
      - '--network=cloudbuild'
      - '--path=.'
      - '--env=BUN_RUNTIME=1'
      - '--env=NODE_ENV=production'
      - '--env=DATABASE_URL=${_DATABASE_URL}'
      - '--env=BETTER_AUTH_SECRET=${_BETTER_AUTH_SECRET}'
      - '--env=BASE_URL=${_BASE_URL}'
      - '--env=GOOGLE_CLIENT_ID=${_GOOGLE_CLIENT_ID}'
      - '--env=GOOGLE_CLIENT_SECRET=${_GOOGLE_CLIENT_SECRET}'
      - '--env=PRISMA_GENERATE=true'
    id: Buildpack
    entrypoint: pack
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - >-
    $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _AR_PROJECT_ID: voice-app-455102
  _PLATFORM: managed
  _SERVICE_NAME: google-voice-app
  _DEPLOY_REGION: us-central1
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _TRIGGER_ID: 2226a8cd-ec2f-48a4-94d7-3d8ea0c5aab0
  _AR_REPOSITORY: cloud-run-source-deploy
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - google-voice-app
